{"version":3,"file":"audio-processor.mjs","sources":["../src/audio-processor.mjs"],"sourcesContent":["class audioProcessor extends AudioWorkletProcessor {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\t\tthis.audioSample = 0;\r\n\t\tthis.byteSample = 0;\r\n\t\tthis.drawMode = 'Points';\r\n\t\tthis.errorDisplayed = true;\r\n\t\tthis.func = null;\r\n\t\tthis.getValues = null;\r\n\t\tthis.isFuncbeat = false;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.playbackSpeed = 1;\r\n\t\tthis.lastByteValue = [null, null];\r\n\t\tthis.lastFuncValue = [null, null];\r\n\t\tthis.lastTime = -1;\r\n\t\tthis.outValue = [0, 0];\r\n\t\tthis.sampleRate = 8000;\r\n\t\tthis.sampleRatio = 1;\r\n\t\tObject.seal(this);\r\n\t\taudioProcessor.deleteGlobals();\r\n\t\taudioProcessor.freezeGlobals();\r\n\t\tthis.port.addEventListener('message', e => this.receiveData(e.data));\r\n\t\tthis.port.start();\r\n\t}\r\n\tstatic deleteGlobals() {\r\n\t\t// Delete single letter variables to prevent persistent variable errors (covers a good enough range)\r\n\t\tfor(let i = 0; i < 26; ++i) {\r\n\t\t\tdelete globalThis[String.fromCharCode(65 + i)];\r\n\t\t\tdelete globalThis[String.fromCharCode(97 + i)];\r\n\t\t}\r\n\t\t// Delete global variables\r\n\t\tfor(const name in globalThis) {\r\n\t\t\tif(Object.prototype.hasOwnProperty.call(globalThis, name)) {\r\n\t\t\t\tdelete globalThis[name];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tstatic freezeGlobals() {\r\n\t\tObject.getOwnPropertyNames(globalThis).forEach(name => {\r\n\t\t\tconst prop = globalThis[name];\r\n\t\t\tconst type = typeof prop;\r\n\t\t\tif((type === 'object' || type === 'function') && name !== 'globalThis') {\r\n\t\t\t\tObject.freeze(prop);\r\n\t\t\t}\r\n\t\t\tif(type === 'function' && Object.prototype.hasOwnProperty.call(prop, 'prototype')) {\r\n\t\t\t\tObject.freeze(prop.prototype);\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(globalThis, name, { writable: false, configurable: false });\r\n\t\t});\r\n\t}\r\n\tstatic getErrorMessage(err, time) {\r\n\t\tconst when = time === null ? 'compilation' : 't=' + time;\r\n\t\tif(!(err instanceof Error)) {\r\n\t\t\treturn `${ when } thrown: ${ typeof err === 'string' ? err : JSON.stringify(err) }`;\r\n\t\t}\r\n\t\tconst { message, lineNumber, columnNumber } = err;\r\n\t\treturn `${ when } error: ${ typeof message === 'string' ? message : JSON.stringify(message) }${\r\n\t\t\ttypeof lineNumber === 'number' && typeof columnNumber === 'number' ?\r\n\t\t\t\t` (at line ${ lineNumber - 3 }, character ${ +columnNumber })` : '' }`;\r\n\t}\r\n\tprocess(inputs, [chData]) {\r\n\t\tconst chDataLen = chData[0].length;\r\n\t\tif(!chDataLen || !this.isPlaying) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet time = this.sampleRatio * this.audioSample;\r\n\t\tlet { byteSample } = this;\r\n\t\tconst drawBuffer = [];\r\n\t\tconst isDiagram = this.drawMode === 'Combined' || this.drawMode === 'Diagram';\r\n\t\tfor(let i = 0; i < chDataLen; ++i) {\r\n\t\t\ttime += this.sampleRatio;\r\n\t\t\tconst currentTime = Math.floor(time);\r\n\t\t\tif(this.lastTime !== currentTime) {\r\n\t\t\t\tlet funcValue;\r\n\t\t\t\tconst currentSample = Math.floor(byteSample);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(this.isFuncbeat) {\r\n\t\t\t\t\t\tfuncValue = this.func(currentSample / this.sampleRate, this.sampleRate);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfuncValue = this.func(currentSample);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tif(this.errorDisplayed) {\r\n\t\t\t\t\t\tthis.errorDisplayed = false;\r\n\t\t\t\t\t\tthis.sendData({\r\n\t\t\t\t\t\t\terror: {\r\n\t\t\t\t\t\t\t\tmessage: audioProcessor.getErrorMessage(err, currentSample),\r\n\t\t\t\t\t\t\t\tisRuntime: true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfuncValue = NaN;\r\n\t\t\t\t}\r\n\t\t\t\tfuncValue = Array.isArray(funcValue) ? [funcValue[0], funcValue[1]] : [funcValue, funcValue];\r\n\t\t\t\tlet hasValue = false;\r\n\t\t\t\tlet ch = 2;\r\n\t\t\t\twhile(ch--) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tfuncValue[ch] = +funcValue[ch];\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\tfuncValue[ch] = NaN;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(isDiagram) {\r\n\t\t\t\t\t\tif(!isNaN(funcValue[ch])) {\r\n\t\t\t\t\t\t\tthis.outValue[ch] = this.getValues(funcValue[ch], ch);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.lastByteValue[ch] = NaN;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thasValue = true;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(funcValue[ch] === this.lastFuncValue[ch]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if(!isNaN(funcValue[ch])) {\r\n\t\t\t\t\t\tthis.outValue[ch] = this.getValues(funcValue[ch], ch);\r\n\t\t\t\t\t\thasValue = true;\r\n\t\t\t\t\t} else if(!isNaN(this.lastFuncValue[ch])) {\r\n\t\t\t\t\t\tthis.lastByteValue[ch] = NaN;\r\n\t\t\t\t\t\thasValue = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(hasValue) {\r\n\t\t\t\t\tdrawBuffer.push({ t: currentSample, value: [...this.lastByteValue] });\r\n\t\t\t\t}\r\n\t\t\t\tbyteSample += currentTime - this.lastTime;\r\n\t\t\t\tthis.lastFuncValue = funcValue;\r\n\t\t\t\tthis.lastTime = currentTime;\r\n\t\t\t}\r\n\t\t\tchData[0][i] = this.outValue[0];\r\n\t\t\tchData[1][i] = this.outValue[1];\r\n\t\t}\r\n\t\tif(Math.abs(byteSample) > Number.MAX_SAFE_INTEGER) {\r\n\t\t\tthis.resetTime();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tthis.audioSample += chDataLen;\r\n\t\tlet isSend = false;\r\n\t\tconst data = {};\r\n\t\tif(byteSample !== this.byteSample) {\r\n\t\t\tisSend = true;\r\n\t\t\tdata.byteSample = this.byteSample = byteSample;\r\n\t\t}\r\n\t\tif(drawBuffer.length) {\r\n\t\t\tisSend = true;\r\n\t\t\tdata.drawBuffer = drawBuffer;\r\n\t\t}\r\n\t\tif(isSend) {\r\n\t\t\tthis.sendData(data);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\treceiveData(data) {\r\n\t\tif(data.byteSample !== undefined) {\r\n\t\t\tthis.byteSample = +data.byteSample || 0;\r\n\t\t\tthis.resetValues();\r\n\t\t}\r\n\t\tif(data.errorDisplayed === true) {\r\n\t\t\tthis.errorDisplayed = true;\r\n\t\t}\r\n\t\tif(data.isPlaying !== undefined) {\r\n\t\t\tthis.isPlaying = data.isPlaying;\r\n\t\t}\r\n\t\tif(data.playbackSpeed !== undefined) {\r\n\t\t\tconst sampleRatio = this.sampleRatio / this.playbackSpeed;\r\n\t\t\tthis.playbackSpeed = data.playbackSpeed;\r\n\t\t\tthis.setSampleRatio(sampleRatio);\r\n\t\t}\r\n\t\tif(data.mode !== undefined) {\r\n\t\t\tthis.isFuncbeat = data.mode === 'Funcbeat';\r\n\t\t\tswitch(data.mode) {\r\n\t\t\tcase 'Bytebeat':\r\n\t\t\t\tthis.getValues = (funcValue, ch) => (this.lastByteValue[ch] = funcValue & 255) / 127.5 - 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Signed Bytebeat':\r\n\t\t\t\tthis.getValues = (funcValue, ch) =>\r\n\t\t\t\t\t(this.lastByteValue[ch] = (funcValue + 128) & 255) / 127.5 - 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Floatbeat':\r\n\t\t\tcase 'Funcbeat':\r\n\t\t\t\tthis.getValues = (funcValue, ch) => {\r\n\t\t\t\t\tconst outValue = Math.max(Math.min(funcValue, 1), -1);\r\n\t\t\t\t\tthis.lastByteValue[ch] = Math.round((outValue + 1) * 127.5);\r\n\t\t\t\t\treturn outValue;\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: this.getValues = (funcValue, ch) => (this.lastByteValue[ch] = NaN);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(data.drawMode !== undefined) {\r\n\t\t\tthis.drawMode = data.drawMode;\r\n\t\t}\r\n\t\tif(data.setFunction !== undefined) {\r\n\t\t\tthis.setFunction(data.setFunction);\r\n\t\t}\r\n\t\tif(data.resetTime === true) {\r\n\t\t\tthis.resetTime();\r\n\t\t}\r\n\t\tif(data.sampleRate !== undefined) {\r\n\t\t\tthis.sampleRate = data.sampleRate;\r\n\t\t}\r\n\t\tif(data.sampleRatio !== undefined) {\r\n\t\t\tthis.setSampleRatio(data.sampleRatio);\r\n\t\t}\r\n\t}\r\n\tsendData(data) {\r\n\t\tthis.port.postMessage(data);\r\n\t}\r\n\tresetTime() {\r\n\t\tthis.byteSample = 0;\r\n\t\tthis.resetValues();\r\n\t\tthis.sendData({ byteSample: 0 });\r\n\t}\r\n\tresetValues() {\r\n\t\tthis.audioSample = 0;\r\n\t\tthis.lastByteValue = this.lastFuncValue = [null, null];\r\n\t\tthis.lastTime = -1;\r\n\t\tthis.outValue = [0, 0];\r\n\t}\r\n\tsetFunction(codeText) {\r\n\t\t// Create shortened Math functions\r\n\t\tconst params = Object.getOwnPropertyNames(Math);\r\n\t\tconst values = params.map(k => Math[k]);\r\n\t\tparams.push('int', 'window');\r\n\t\tvalues.push(Math.floor, globalThis);\r\n\t\taudioProcessor.deleteGlobals();\r\n\t\t// Code testing\r\n\t\tlet isCompiled = false;\r\n\t\tconst oldFunc = this.func;\r\n\t\ttry {\r\n\t\t\tif(this.isFuncbeat) {\r\n\t\t\t\tthis.func = new Function(...params, codeText).bind(globalThis, ...values);\r\n\t\t\t} else {\r\n\t\t\t\t// Optimize code like eval(unescape(escape`XXXX`.replace(/u(..)/g,\"$1%\")))\r\n\t\t\t\tcodeText = codeText.trim().replace(\r\n\t\t\t\t\t/^eval\\(unescape\\(escape(?:`|\\('|\\(\"|\\(`)(.*?)(?:`|'\\)|\"\\)|`\\)).replace\\(\\/u\\(\\.\\.\\)\\/g,[\"'`]\\$1%[\"'`]\\)\\)\\)$/,\r\n\t\t\t\t\t(match, m1) => unescape(escape(m1).replace(/u(..)/g, '$1%')));\r\n\t\t\t\tthis.func = new Function(...params, 't', `return 0,\\n${ codeText || 0 };`)\r\n\t\t\t\t\t.bind(globalThis, ...values);\r\n\t\t\t}\r\n\t\t\tisCompiled = true;\r\n\t\t\tif(this.isFuncbeat) {\r\n\t\t\t\tthis.func = this.func();\r\n\t\t\t\tthis.func(0, this.sampleRate);\r\n\t\t\t} else {\r\n\t\t\t\tthis.func(0);\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\tif(!isCompiled) {\r\n\t\t\t\tthis.func = oldFunc;\r\n\t\t\t}\r\n\t\t\tthis.errorDisplayed = false;\r\n\t\t\tthis.sendData({\r\n\t\t\t\terror: { message: audioProcessor.getErrorMessage(err, isCompiled ? 0 : null), isCompiled },\r\n\t\t\t\tupdateUrl: isCompiled\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.errorDisplayed = false;\r\n\t\tthis.sendData({ error: { message: '', isCompiled }, updateUrl: true });\r\n\t}\r\n\tsetSampleRatio(sampleRatio) {\r\n\t\tconst timeOffset = Math.floor(this.sampleRatio * this.audioSample) - this.lastTime;\r\n\t\tthis.sampleRatio = sampleRatio * this.playbackSpeed;\r\n\t\tthis.lastTime = Math.floor(this.sampleRatio * this.audioSample) - timeOffset;\r\n\t}\r\n}\r\n\r\nregisterProcessor('audioProcessor', audioProcessor);\r\n"],"names":["audioProcessor","AudioWorkletProcessor","constructor","args","super","this","audioSample","byteSample","drawMode","errorDisplayed","func","getValues","isFuncbeat","isPlaying","playbackSpeed","lastByteValue","lastFuncValue","lastTime","outValue","sampleRate","sampleRatio","Object","seal","deleteGlobals","freezeGlobals","port","addEventListener","e","receiveData","data","start","i","globalThis","String","fromCharCode","name","prototype","hasOwnProperty","call","getOwnPropertyNames","forEach","prop","type","freeze","defineProperty","writable","configurable","getErrorMessage","err","time","when","Error","JSON","stringify","message","lineNumber","columnNumber","process","inputs","chData","chDataLen","length","drawBuffer","isDiagram","currentTime","Math","floor","funcValue","currentSample","sendData","error","isRuntime","NaN","Array","isArray","hasValue","ch","isNaN","push","t","value","abs","Number","MAX_SAFE_INTEGER","resetTime","isSend","undefined","resetValues","setSampleRatio","mode","max","min","round","setFunction","postMessage","codeText","params","values","map","k","isCompiled","oldFunc","Function","bind","trim","replace","match","m1","unescape","escape","updateUrl","timeOffset","registerProcessor"],"mappings":"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"}